openapi: 3.0.0
info:
  version: '1.0'
  title: REST API
  contact:
    name: Ivan
    email: i.am.ivan.ilinov@gmail.com
servers:
  - url: 'https://example.com/v1.0'
    description: Live Server
tags:
  - name: Раздел
    description: |
      API for Educational System
security:
  - SecretApiKey: []
  - JWT: []
paths:
  '/getStudents{id}':
    get:
      summary: getStudentByID
      description: Request for getting student
      tags:
        - Student
      parameters:
        - name: id
          in: path
          description: Student ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  Student:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                    required:
                      - id
                      - name
  '/getSubject{id}':
    get:
      summary: getSubject
      description: Request for getting student
      tags:
        - Subject
      parameters:
        - name: id
          in: path
          description: Subject ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  Student:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                    required:
                      - id
                      - name
  '/getStudent{id}':
    get:
      summary: getStudentByID
      description: Request for getting student
      tags:
        - Student
      parameters:
        - name: id
          in: path
          description: Student ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  Student:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                    required:
                      - id
                      - name
  /auth:
    post:
      summary: JWT токен
      description: Выдаёт токен пользователю для осуществления операций
      tags:
        - Auth
      security: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: i.i@gmail.com
                password:
                  type: string
                  example: 1p2aSs_Wo4D
      responses:
        '200':
          description: OK
          content:
            applications/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '422':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: Не указан Email
                      password:
                        type: array
                        items:
                          type: string
                          example: Не указан пароль
    x-components:
      headers:
        Api-Token:
          schema:
            type: string
            example: 9f34dd3a-ff8d-43aa-b286-9f22555319f6
      schemas:
        User: &ref_0
          type: object
          properties:
            id:
              type: string
              example: 41
            name:
              type: string
              example: Ivan Ilinov
            email:
              type: string
              example: i.i@gmail.com
  /register:
    post:
      summary: Регистрация пользователя
      description: Регистрирует пользователя в системе
      tags:
        - Register
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: i.i@gmail.com
                password:
                  type: string
                  example: 1p2aSs_Wo4d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ivan Ilinov
                      email:
                        type: string
                        example: o.o@gmail.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User: *ref_0
