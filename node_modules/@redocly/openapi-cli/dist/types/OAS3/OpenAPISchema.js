"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _OpenAPIExternalDocumentation = _interopRequireDefault(require("./OpenAPIExternalDocumentation"));

var _OpenAPISchemaMap = _interopRequireDefault(require("./OpenAPISchemaMap"));

var _OpenAPIDiscriminator = _interopRequireDefault(require("./OpenAPIDiscriminator"));

var _OpenAPIXML = _interopRequireDefault(require("./OpenAPIXML"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-check

/* eslint-disable import/no-cycle */
const OpenAPISchemaObject = {
  name: 'OpenAPISchema',
  isIdempotent: true,
  properties: {
    allOf() {
      return OpenAPISchemaObject;
    },

    anyOf() {
      return OpenAPISchemaObject;
    },

    oneOf() {
      return OpenAPISchemaObject;
    },

    not() {
      return OpenAPISchemaObject;
    },

    items() {
      return OpenAPISchemaObject;
    },

    properties: _OpenAPISchemaMap.default,
    discriminator: _OpenAPIDiscriminator.default,
    externalDocs: _OpenAPIExternalDocumentation.default,
    xml: _OpenAPIXML.default,
    title: null,
    description: null,
    multipleOf: null,
    maximum: null,
    exclusiveMaximum: null,
    minimum: null,
    exclusiveMinimum: null,
    maxLength: null,
    minLength: null,
    pattern: null,
    maxItems: null,
    minItems: null,
    uniqueItems: null,
    maxProperties: null,
    minProperties: null,
    required: null,
    enum: null,
    type: null,
    additionalProperties: null,
    format: null,
    nullable: null,
    readOnly: null,
    writeOnly: null,
    deprecated: null,
    example: null,
    default: null
  },
  resolvableScalars: ['description']
};
var _default = OpenAPISchemaObject;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBlcy9PQVMzL09wZW5BUElTY2hlbWEuanMiXSwibmFtZXMiOlsiT3BlbkFQSVNjaGVtYU9iamVjdCIsIm5hbWUiLCJpc0lkZW1wb3RlbnQiLCJwcm9wZXJ0aWVzIiwiYWxsT2YiLCJhbnlPZiIsIm9uZU9mIiwibm90IiwiaXRlbXMiLCJPcGVuQVBJU2NoZW1hTWFwIiwiZGlzY3JpbWluYXRvciIsIk9wZW5BUElEaXNjcmltaW5hdG9yIiwiZXh0ZXJuYWxEb2NzIiwiT3BlbkFQSUV4dGVybmFsRG9jdW1lbnRhdGlvbiIsInhtbCIsIk9wZW5BUElYTUwiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwibXVsdGlwbGVPZiIsIm1heGltdW0iLCJleGNsdXNpdmVNYXhpbXVtIiwibWluaW11bSIsImV4Y2x1c2l2ZU1pbmltdW0iLCJtYXhMZW5ndGgiLCJtaW5MZW5ndGgiLCJwYXR0ZXJuIiwibWF4SXRlbXMiLCJtaW5JdGVtcyIsInVuaXF1ZUl0ZW1zIiwibWF4UHJvcGVydGllcyIsIm1pblByb3BlcnRpZXMiLCJyZXF1aXJlZCIsImVudW0iLCJ0eXBlIiwiYWRkaXRpb25hbFByb3BlcnRpZXMiLCJmb3JtYXQiLCJudWxsYWJsZSIsInJlYWRPbmx5Iiwid3JpdGVPbmx5IiwiZGVwcmVjYXRlZCIsImV4YW1wbGUiLCJkZWZhdWx0IiwicmVzb2x2YWJsZVNjYWxhcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQU5BOztBQUNBO0FBT0EsTUFBTUEsbUJBQW1CLEdBQUc7QUFDMUJDLEVBQUFBLElBQUksRUFBRSxlQURvQjtBQUUxQkMsRUFBQUEsWUFBWSxFQUFFLElBRlk7QUFHMUJDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxLQUFLLEdBQUc7QUFDTixhQUFPSixtQkFBUDtBQUNELEtBSFM7O0FBSVZLLElBQUFBLEtBQUssR0FBRztBQUNOLGFBQU9MLG1CQUFQO0FBQ0QsS0FOUzs7QUFPVk0sSUFBQUEsS0FBSyxHQUFHO0FBQ04sYUFBT04sbUJBQVA7QUFDRCxLQVRTOztBQVVWTyxJQUFBQSxHQUFHLEdBQUc7QUFDSixhQUFPUCxtQkFBUDtBQUNELEtBWlM7O0FBYVZRLElBQUFBLEtBQUssR0FBRztBQUNOLGFBQU9SLG1CQUFQO0FBQ0QsS0FmUzs7QUFnQlZHLElBQUFBLFVBQVUsRUFBRU0seUJBaEJGO0FBaUJWQyxJQUFBQSxhQUFhLEVBQUVDLDZCQWpCTDtBQWtCVkMsSUFBQUEsWUFBWSxFQUFFQyxxQ0FsQko7QUFtQlZDLElBQUFBLEdBQUcsRUFBRUMsbUJBbkJLO0FBcUJWQyxJQUFBQSxLQUFLLEVBQUUsSUFyQkc7QUFzQlZDLElBQUFBLFdBQVcsRUFBRSxJQXRCSDtBQXVCVkMsSUFBQUEsVUFBVSxFQUFFLElBdkJGO0FBd0JWQyxJQUFBQSxPQUFPLEVBQUUsSUF4QkM7QUF5QlZDLElBQUFBLGdCQUFnQixFQUFFLElBekJSO0FBMEJWQyxJQUFBQSxPQUFPLEVBQUUsSUExQkM7QUEyQlZDLElBQUFBLGdCQUFnQixFQUFFLElBM0JSO0FBNEJWQyxJQUFBQSxTQUFTLEVBQUUsSUE1QkQ7QUE2QlZDLElBQUFBLFNBQVMsRUFBRSxJQTdCRDtBQThCVkMsSUFBQUEsT0FBTyxFQUFFLElBOUJDO0FBK0JWQyxJQUFBQSxRQUFRLEVBQUUsSUEvQkE7QUFnQ1ZDLElBQUFBLFFBQVEsRUFBRSxJQWhDQTtBQWlDVkMsSUFBQUEsV0FBVyxFQUFFLElBakNIO0FBa0NWQyxJQUFBQSxhQUFhLEVBQUUsSUFsQ0w7QUFtQ1ZDLElBQUFBLGFBQWEsRUFBRSxJQW5DTDtBQW9DVkMsSUFBQUEsUUFBUSxFQUFFLElBcENBO0FBcUNWQyxJQUFBQSxJQUFJLEVBQUUsSUFyQ0k7QUFzQ1ZDLElBQUFBLElBQUksRUFBRSxJQXRDSTtBQXVDVkMsSUFBQUEsb0JBQW9CLEVBQUUsSUF2Q1o7QUF3Q1ZDLElBQUFBLE1BQU0sRUFBRSxJQXhDRTtBQXlDVkMsSUFBQUEsUUFBUSxFQUFFLElBekNBO0FBMENWQyxJQUFBQSxRQUFRLEVBQUUsSUExQ0E7QUEyQ1ZDLElBQUFBLFNBQVMsRUFBRSxJQTNDRDtBQTRDVkMsSUFBQUEsVUFBVSxFQUFFLElBNUNGO0FBNkNWQyxJQUFBQSxPQUFPLEVBQUUsSUE3Q0M7QUE4Q1ZDLElBQUFBLE9BQU8sRUFBRTtBQTlDQyxHQUhjO0FBbUQxQkMsRUFBQUEsaUJBQWlCLEVBQUUsQ0FDakIsYUFEaUI7QUFuRE8sQ0FBNUI7ZUF3RGUxQyxtQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWN5Y2xlICovXG5cbmltcG9ydCBPcGVuQVBJRXh0ZXJuYWxEb2N1bWVudGF0aW9uIGZyb20gJy4vT3BlbkFQSUV4dGVybmFsRG9jdW1lbnRhdGlvbic7XG5pbXBvcnQgT3BlbkFQSVNjaGVtYU1hcCBmcm9tICcuL09wZW5BUElTY2hlbWFNYXAnO1xuaW1wb3J0IE9wZW5BUElEaXNjcmltaW5hdG9yIGZyb20gJy4vT3BlbkFQSURpc2NyaW1pbmF0b3InO1xuaW1wb3J0IE9wZW5BUElYTUwgZnJvbSAnLi9PcGVuQVBJWE1MJztcblxuY29uc3QgT3BlbkFQSVNjaGVtYU9iamVjdCA9IHtcbiAgbmFtZTogJ09wZW5BUElTY2hlbWEnLFxuICBpc0lkZW1wb3RlbnQ6IHRydWUsXG4gIHByb3BlcnRpZXM6IHtcbiAgICBhbGxPZigpIHtcbiAgICAgIHJldHVybiBPcGVuQVBJU2NoZW1hT2JqZWN0O1xuICAgIH0sXG4gICAgYW55T2YoKSB7XG4gICAgICByZXR1cm4gT3BlbkFQSVNjaGVtYU9iamVjdDtcbiAgICB9LFxuICAgIG9uZU9mKCkge1xuICAgICAgcmV0dXJuIE9wZW5BUElTY2hlbWFPYmplY3Q7XG4gICAgfSxcbiAgICBub3QoKSB7XG4gICAgICByZXR1cm4gT3BlbkFQSVNjaGVtYU9iamVjdDtcbiAgICB9LFxuICAgIGl0ZW1zKCkge1xuICAgICAgcmV0dXJuIE9wZW5BUElTY2hlbWFPYmplY3Q7XG4gICAgfSxcbiAgICBwcm9wZXJ0aWVzOiBPcGVuQVBJU2NoZW1hTWFwLFxuICAgIGRpc2NyaW1pbmF0b3I6IE9wZW5BUElEaXNjcmltaW5hdG9yLFxuICAgIGV4dGVybmFsRG9jczogT3BlbkFQSUV4dGVybmFsRG9jdW1lbnRhdGlvbixcbiAgICB4bWw6IE9wZW5BUElYTUwsXG5cbiAgICB0aXRsZTogbnVsbCxcbiAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICBtdWx0aXBsZU9mOiBudWxsLFxuICAgIG1heGltdW06IG51bGwsXG4gICAgZXhjbHVzaXZlTWF4aW11bTogbnVsbCxcbiAgICBtaW5pbXVtOiBudWxsLFxuICAgIGV4Y2x1c2l2ZU1pbmltdW06IG51bGwsXG4gICAgbWF4TGVuZ3RoOiBudWxsLFxuICAgIG1pbkxlbmd0aDogbnVsbCxcbiAgICBwYXR0ZXJuOiBudWxsLFxuICAgIG1heEl0ZW1zOiBudWxsLFxuICAgIG1pbkl0ZW1zOiBudWxsLFxuICAgIHVuaXF1ZUl0ZW1zOiBudWxsLFxuICAgIG1heFByb3BlcnRpZXM6IG51bGwsXG4gICAgbWluUHJvcGVydGllczogbnVsbCxcbiAgICByZXF1aXJlZDogbnVsbCxcbiAgICBlbnVtOiBudWxsLFxuICAgIHR5cGU6IG51bGwsXG4gICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IG51bGwsXG4gICAgZm9ybWF0OiBudWxsLFxuICAgIG51bGxhYmxlOiBudWxsLFxuICAgIHJlYWRPbmx5OiBudWxsLFxuICAgIHdyaXRlT25seTogbnVsbCxcbiAgICBkZXByZWNhdGVkOiBudWxsLFxuICAgIGV4YW1wbGU6IG51bGwsXG4gICAgZGVmYXVsdDogbnVsbCxcbiAgfSxcbiAgcmVzb2x2YWJsZVNjYWxhcnM6IFtcbiAgICAnZGVzY3JpcHRpb24nLFxuICBdLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT3BlbkFQSVNjaGVtYU9iamVjdDtcbiJdfQ==