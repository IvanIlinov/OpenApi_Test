"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bundle = exports.bundleToFile = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _jsYaml = _interopRequireDefault(require("js-yaml"));

var _config = require("./config");

var _traverse = _interopRequireDefault(require("./traverse"));

var _context = _interopRequireDefault(require("./context"));

var _OAS = require("./types/OAS3");

var _OAS2 = require("./types/OAS2");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const bundleToFile = async (fName, outputFile, force) => {
  const resolvedFileName = fName; // path.resolve(fName);

  const doc = _fs.default.readFileSync(resolvedFileName, 'utf-8');

  let document;

  try {
    document = _jsYaml.default.safeLoad(doc);
  } catch (ex) {
    throw new Error("Can't load yaml file");
  }

  if (!document.openapi) {
    return [];
  }

  const lintConfig = (0, _config.getLintConfig)({});
  lintConfig.rules = { ...lintConfig.rules,
    bundler: { ...(lintConfig.rules && typeof lintConfig.rules.bundler === 'object' ? lintConfig.rules.bundler : null),
      output: outputFile,
      ignoreErrors: force
    }
  };
  const ctx = (0, _context.default)(document, doc, resolvedFileName, lintConfig);
  const rootNode = ctx.openapiVersion === 3 ? _OAS.OpenAPIRoot : _OAS2.OAS2Root;
  await (0, _traverse.default)(document, rootNode, ctx);
  return ctx.result;
};

exports.bundleToFile = bundleToFile;

const bundle = async (fName, force, options) => {
  const resolvedFileName = fName; // path.resolve(fName);

  const doc = _fs.default.readFileSync(resolvedFileName, 'utf-8');

  let document;

  try {
    document = _jsYaml.default.safeLoad(doc);
  } catch (ex) {
    throw new Error("Can't load yaml file");
  }

  if (!document.openapi) {
    return [];
  }

  const config = (0, _config.getLintConfig)(options);
  config.rules = { ...config.rules,
    bundler: { ...(config.rules && typeof config.rules.bundler === 'object' ? config.rules.bundler : null),
      outputObject: true,
      ignoreErrors: force
    }
  };
  const ctx = (0, _context.default)(document, doc, resolvedFileName, config);
  await (0, _traverse.default)(document, _OAS.OpenAPIRoot, ctx);
  return {
    bundle: ctx.bundlingResult,
    result: ctx.result,
    fileDependencies: ctx.fileDependencies
  };
};

exports.bundle = bundle;
var _default = bundleToFile;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9idW5kbGUuanMiXSwibmFtZXMiOlsiYnVuZGxlVG9GaWxlIiwiZk5hbWUiLCJvdXRwdXRGaWxlIiwiZm9yY2UiLCJyZXNvbHZlZEZpbGVOYW1lIiwiZG9jIiwiZnMiLCJyZWFkRmlsZVN5bmMiLCJkb2N1bWVudCIsInlhbWwiLCJzYWZlTG9hZCIsImV4IiwiRXJyb3IiLCJvcGVuYXBpIiwibGludENvbmZpZyIsInJ1bGVzIiwiYnVuZGxlciIsIm91dHB1dCIsImlnbm9yZUVycm9ycyIsImN0eCIsInJvb3ROb2RlIiwib3BlbmFwaVZlcnNpb24iLCJPcGVuQVBJUm9vdCIsIk9BUzJSb290IiwicmVzdWx0IiwiYnVuZGxlIiwib3B0aW9ucyIsImNvbmZpZyIsIm91dHB1dE9iamVjdCIsImJ1bmRsaW5nUmVzdWx0IiwiZmlsZURlcGVuZGVuY2llcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRU8sTUFBTUEsWUFBWSxHQUFHLE9BQU9DLEtBQVAsRUFBY0MsVUFBZCxFQUEwQkMsS0FBMUIsS0FBb0M7QUFDOUQsUUFBTUMsZ0JBQWdCLEdBQUdILEtBQXpCLENBRDhELENBQzlCOztBQUNoQyxRQUFNSSxHQUFHLEdBQUdDLFlBQUdDLFlBQUgsQ0FBZ0JILGdCQUFoQixFQUFrQyxPQUFsQyxDQUFaOztBQUNBLE1BQUlJLFFBQUo7O0FBRUEsTUFBSTtBQUNGQSxJQUFBQSxRQUFRLEdBQUdDLGdCQUFLQyxRQUFMLENBQWNMLEdBQWQsQ0FBWDtBQUNELEdBRkQsQ0FFRSxPQUFPTSxFQUFQLEVBQVc7QUFDWCxVQUFNLElBQUlDLEtBQUosQ0FBVSxzQkFBVixDQUFOO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSixRQUFRLENBQUNLLE9BQWQsRUFBdUI7QUFBRSxXQUFPLEVBQVA7QUFBWTs7QUFFckMsUUFBTUMsVUFBVSxHQUFHLDJCQUFjLEVBQWQsQ0FBbkI7QUFDQUEsRUFBQUEsVUFBVSxDQUFDQyxLQUFYLEdBQW1CLEVBQ2pCLEdBQUdELFVBQVUsQ0FBQ0MsS0FERztBQUVqQkMsSUFBQUEsT0FBTyxFQUFFLEVBQ1AsSUFBSUYsVUFBVSxDQUFDQyxLQUFYLElBQW9CLE9BQU9ELFVBQVUsQ0FBQ0MsS0FBWCxDQUFpQkMsT0FBeEIsS0FBb0MsUUFBeEQsR0FBbUVGLFVBQVUsQ0FBQ0MsS0FBWCxDQUFpQkMsT0FBcEYsR0FBOEYsSUFBbEcsQ0FETztBQUVQQyxNQUFBQSxNQUFNLEVBQUVmLFVBRkQ7QUFHUGdCLE1BQUFBLFlBQVksRUFBRWY7QUFIUDtBQUZRLEdBQW5CO0FBU0EsUUFBTWdCLEdBQUcsR0FBRyxzQkFBY1gsUUFBZCxFQUF3QkgsR0FBeEIsRUFBNkJELGdCQUE3QixFQUErQ1UsVUFBL0MsQ0FBWjtBQUVBLFFBQU1NLFFBQVEsR0FBR0QsR0FBRyxDQUFDRSxjQUFKLEtBQXVCLENBQXZCLEdBQTJCQyxnQkFBM0IsR0FBeUNDLGNBQTFEO0FBQ0EsUUFBTSx1QkFBYWYsUUFBYixFQUF1QlksUUFBdkIsRUFBaUNELEdBQWpDLENBQU47QUFDQSxTQUFPQSxHQUFHLENBQUNLLE1BQVg7QUFDRCxDQTVCTTs7OztBQThCQSxNQUFNQyxNQUFNLEdBQUcsT0FBT3hCLEtBQVAsRUFBY0UsS0FBZCxFQUFxQnVCLE9BQXJCLEtBQWlDO0FBQ3JELFFBQU10QixnQkFBZ0IsR0FBR0gsS0FBekIsQ0FEcUQsQ0FDckI7O0FBQ2hDLFFBQU1JLEdBQUcsR0FBR0MsWUFBR0MsWUFBSCxDQUFnQkgsZ0JBQWhCLEVBQWtDLE9BQWxDLENBQVo7O0FBQ0EsTUFBSUksUUFBSjs7QUFFQSxNQUFJO0FBQ0ZBLElBQUFBLFFBQVEsR0FBR0MsZ0JBQUtDLFFBQUwsQ0FBY0wsR0FBZCxDQUFYO0FBQ0QsR0FGRCxDQUVFLE9BQU9NLEVBQVAsRUFBVztBQUNYLFVBQU0sSUFBSUMsS0FBSixDQUFVLHNCQUFWLENBQU47QUFDRDs7QUFFRCxNQUFJLENBQUNKLFFBQVEsQ0FBQ0ssT0FBZCxFQUF1QjtBQUFFLFdBQU8sRUFBUDtBQUFZOztBQUVyQyxRQUFNYyxNQUFNLEdBQUcsMkJBQWNELE9BQWQsQ0FBZjtBQUNBQyxFQUFBQSxNQUFNLENBQUNaLEtBQVAsR0FBZSxFQUNiLEdBQUdZLE1BQU0sQ0FBQ1osS0FERztBQUViQyxJQUFBQSxPQUFPLEVBQUUsRUFDUCxJQUFJVyxNQUFNLENBQUNaLEtBQVAsSUFBZ0IsT0FBT1ksTUFBTSxDQUFDWixLQUFQLENBQWFDLE9BQXBCLEtBQWdDLFFBQWhELEdBQTJEVyxNQUFNLENBQUNaLEtBQVAsQ0FBYUMsT0FBeEUsR0FBa0YsSUFBdEYsQ0FETztBQUVQWSxNQUFBQSxZQUFZLEVBQUUsSUFGUDtBQUdQVixNQUFBQSxZQUFZLEVBQUVmO0FBSFA7QUFGSSxHQUFmO0FBU0EsUUFBTWdCLEdBQUcsR0FBRyxzQkFBY1gsUUFBZCxFQUF3QkgsR0FBeEIsRUFBNkJELGdCQUE3QixFQUErQ3VCLE1BQS9DLENBQVo7QUFFQSxRQUFNLHVCQUFhbkIsUUFBYixFQUF1QmMsZ0JBQXZCLEVBQW9DSCxHQUFwQyxDQUFOO0FBRUEsU0FBTztBQUFFTSxJQUFBQSxNQUFNLEVBQUVOLEdBQUcsQ0FBQ1UsY0FBZDtBQUE4QkwsSUFBQUEsTUFBTSxFQUFFTCxHQUFHLENBQUNLLE1BQTFDO0FBQWtETSxJQUFBQSxnQkFBZ0IsRUFBRVgsR0FBRyxDQUFDVztBQUF4RSxHQUFQO0FBQ0QsQ0E1Qk07OztlQThCUTlCLFkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHlhbWwgZnJvbSAnanMteWFtbCc7XG5cbmltcG9ydCB7IGdldExpbnRDb25maWcgfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgdHJhdmVyc2VOb2RlIGZyb20gJy4vdHJhdmVyc2UnO1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnLi9jb250ZXh0JztcblxuaW1wb3J0IHsgT3BlbkFQSVJvb3QgfSBmcm9tICcuL3R5cGVzL09BUzMnO1xuaW1wb3J0IHsgT0FTMlJvb3QgfSBmcm9tICcuL3R5cGVzL09BUzInO1xuXG5leHBvcnQgY29uc3QgYnVuZGxlVG9GaWxlID0gYXN5bmMgKGZOYW1lLCBvdXRwdXRGaWxlLCBmb3JjZSkgPT4ge1xuICBjb25zdCByZXNvbHZlZEZpbGVOYW1lID0gZk5hbWU7IC8vIHBhdGgucmVzb2x2ZShmTmFtZSk7XG4gIGNvbnN0IGRvYyA9IGZzLnJlYWRGaWxlU3luYyhyZXNvbHZlZEZpbGVOYW1lLCAndXRmLTgnKTtcbiAgbGV0IGRvY3VtZW50O1xuXG4gIHRyeSB7XG4gICAgZG9jdW1lbnQgPSB5YW1sLnNhZmVMb2FkKGRvYyk7XG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgbG9hZCB5YW1sIGZpbGVcIik7XG4gIH1cblxuICBpZiAoIWRvY3VtZW50Lm9wZW5hcGkpIHsgcmV0dXJuIFtdOyB9XG5cbiAgY29uc3QgbGludENvbmZpZyA9IGdldExpbnRDb25maWcoe30pO1xuICBsaW50Q29uZmlnLnJ1bGVzID0ge1xuICAgIC4uLmxpbnRDb25maWcucnVsZXMsXG4gICAgYnVuZGxlcjoge1xuICAgICAgLi4uKGxpbnRDb25maWcucnVsZXMgJiYgdHlwZW9mIGxpbnRDb25maWcucnVsZXMuYnVuZGxlciA9PT0gJ29iamVjdCcgPyBsaW50Q29uZmlnLnJ1bGVzLmJ1bmRsZXIgOiBudWxsKSxcbiAgICAgIG91dHB1dDogb3V0cHV0RmlsZSxcbiAgICAgIGlnbm9yZUVycm9yczogZm9yY2UsXG4gICAgfSxcbiAgfTtcblxuICBjb25zdCBjdHggPSBjcmVhdGVDb250ZXh0KGRvY3VtZW50LCBkb2MsIHJlc29sdmVkRmlsZU5hbWUsIGxpbnRDb25maWcpO1xuXG4gIGNvbnN0IHJvb3ROb2RlID0gY3R4Lm9wZW5hcGlWZXJzaW9uID09PSAzID8gT3BlbkFQSVJvb3QgOiBPQVMyUm9vdDtcbiAgYXdhaXQgdHJhdmVyc2VOb2RlKGRvY3VtZW50LCByb290Tm9kZSwgY3R4KTtcbiAgcmV0dXJuIGN0eC5yZXN1bHQ7XG59O1xuXG5leHBvcnQgY29uc3QgYnVuZGxlID0gYXN5bmMgKGZOYW1lLCBmb3JjZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCByZXNvbHZlZEZpbGVOYW1lID0gZk5hbWU7IC8vIHBhdGgucmVzb2x2ZShmTmFtZSk7XG4gIGNvbnN0IGRvYyA9IGZzLnJlYWRGaWxlU3luYyhyZXNvbHZlZEZpbGVOYW1lLCAndXRmLTgnKTtcbiAgbGV0IGRvY3VtZW50O1xuXG4gIHRyeSB7XG4gICAgZG9jdW1lbnQgPSB5YW1sLnNhZmVMb2FkKGRvYyk7XG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgbG9hZCB5YW1sIGZpbGVcIik7XG4gIH1cblxuICBpZiAoIWRvY3VtZW50Lm9wZW5hcGkpIHsgcmV0dXJuIFtdOyB9XG5cbiAgY29uc3QgY29uZmlnID0gZ2V0TGludENvbmZpZyhvcHRpb25zKTtcbiAgY29uZmlnLnJ1bGVzID0ge1xuICAgIC4uLmNvbmZpZy5ydWxlcyxcbiAgICBidW5kbGVyOiB7XG4gICAgICAuLi4oY29uZmlnLnJ1bGVzICYmIHR5cGVvZiBjb25maWcucnVsZXMuYnVuZGxlciA9PT0gJ29iamVjdCcgPyBjb25maWcucnVsZXMuYnVuZGxlciA6IG51bGwpLFxuICAgICAgb3V0cHV0T2JqZWN0OiB0cnVlLFxuICAgICAgaWdub3JlRXJyb3JzOiBmb3JjZSxcbiAgICB9LFxuICB9O1xuXG4gIGNvbnN0IGN0eCA9IGNyZWF0ZUNvbnRleHQoZG9jdW1lbnQsIGRvYywgcmVzb2x2ZWRGaWxlTmFtZSwgY29uZmlnKTtcblxuICBhd2FpdCB0cmF2ZXJzZU5vZGUoZG9jdW1lbnQsIE9wZW5BUElSb290LCBjdHgpO1xuXG4gIHJldHVybiB7IGJ1bmRsZTogY3R4LmJ1bmRsaW5nUmVzdWx0LCByZXN1bHQ6IGN0eC5yZXN1bHQsIGZpbGVEZXBlbmRlbmNpZXM6IGN0eC5maWxlRGVwZW5kZW5jaWVzIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBidW5kbGVUb0ZpbGU7XG4iXX0=