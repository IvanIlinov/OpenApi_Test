"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateFromFile = exports.validateFromUrl = exports.validate = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _jsYaml = _interopRequireDefault(require("js-yaml"));

var _OAS = require("./types/OAS3");

var _OAS2 = require("./types/OAS2");

var _error = require("./error");

var _utils = require("./utils");

var _config = require("./config");

var _traverse = _interopRequireDefault(require("./traverse"));

var _context = _interopRequireDefault(require("./context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-param-reassign */
const validate = async (yamlData, filePath, options = {}) => {
  let document;

  try {
    document = _jsYaml.default.safeLoad(yamlData);
  } catch (ex) {
    return [(0, _error.createYAMLParseError)(ex, {}, filePath, yamlData, true)];
  }

  if (!document.openapi && !document.swagger && !document.$ref) return [];
  const config = (0, _config.getLintConfig)(options);
  config.rules.bundler = 'off';
  const ctx = (0, _context.default)(document, yamlData, filePath, config);
  ctx.getRule = ctx.getRule.bind(null, ctx);
  const rootNode = ctx.openapiVersion === 3 ? _OAS.OpenAPIRoot : _OAS2.OAS2Root;
  await (0, _traverse.default)(document, rootNode, ctx);
  const filtered = ctx.result.filter(msg => {
    for (let j = 0; j < ctx.customRules.length; j++) {
      if (msg.fromRule === ctx.customRules[j]) {
        if (ctx.customRules[j].config.excludePaths) {
          const fullPath = `${msg.file}#/${msg.path.join('/')}`;
          return ctx.customRules[j].config.excludePaths.indexOf(fullPath) === -1;
        }

        return true;
      }
    }

    return true;
  });
  return filtered;
};

exports.validate = validate;

const validateFromUrl = async (link, options) => {
  const doc = await (0, _utils.getFile)(link);
  const validationResult = await validate(doc, link, options);
  return validationResult;
};

exports.validateFromUrl = validateFromUrl;

const validateFromFile = async (fName, options) => {
  const resolvedFileName = fName; // path.resolve(fName);

  const doc = _fs.default.readFileSync(resolvedFileName, 'utf-8');

  const validationResult = await validate(doc, resolvedFileName, options);
  return validationResult;
};

exports.validateFromFile = validateFromFile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy92YWxpZGF0ZS5qcyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZSIsInlhbWxEYXRhIiwiZmlsZVBhdGgiLCJvcHRpb25zIiwiZG9jdW1lbnQiLCJ5YW1sIiwic2FmZUxvYWQiLCJleCIsIm9wZW5hcGkiLCJzd2FnZ2VyIiwiJHJlZiIsImNvbmZpZyIsInJ1bGVzIiwiYnVuZGxlciIsImN0eCIsImdldFJ1bGUiLCJiaW5kIiwicm9vdE5vZGUiLCJvcGVuYXBpVmVyc2lvbiIsIk9wZW5BUElSb290IiwiT0FTMlJvb3QiLCJmaWx0ZXJlZCIsInJlc3VsdCIsImZpbHRlciIsIm1zZyIsImoiLCJjdXN0b21SdWxlcyIsImxlbmd0aCIsImZyb21SdWxlIiwiZXhjbHVkZVBhdGhzIiwiZnVsbFBhdGgiLCJmaWxlIiwicGF0aCIsImpvaW4iLCJpbmRleE9mIiwidmFsaWRhdGVGcm9tVXJsIiwibGluayIsImRvYyIsInZhbGlkYXRpb25SZXN1bHQiLCJ2YWxpZGF0ZUZyb21GaWxlIiwiZk5hbWUiLCJyZXNvbHZlZEZpbGVOYW1lIiwiZnMiLCJyZWFkRmlsZVN5bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQWJBO0FBZU8sTUFBTUEsUUFBUSxHQUFHLE9BQU9DLFFBQVAsRUFBaUJDLFFBQWpCLEVBQTJCQyxPQUFPLEdBQUcsRUFBckMsS0FBNEM7QUFDbEUsTUFBSUMsUUFBSjs7QUFDQSxNQUFJO0FBQ0ZBLElBQUFBLFFBQVEsR0FBR0MsZ0JBQUtDLFFBQUwsQ0FBY0wsUUFBZCxDQUFYO0FBQ0QsR0FGRCxDQUVFLE9BQU9NLEVBQVAsRUFBVztBQUNYLFdBQU8sQ0FBQyxpQ0FBcUJBLEVBQXJCLEVBQXlCLEVBQXpCLEVBQTZCTCxRQUE3QixFQUF1Q0QsUUFBdkMsRUFBaUQsSUFBakQsQ0FBRCxDQUFQO0FBQ0Q7O0FBQ0QsTUFBSSxDQUFDRyxRQUFRLENBQUNJLE9BQVYsSUFBcUIsQ0FBQ0osUUFBUSxDQUFDSyxPQUEvQixJQUEwQyxDQUFDTCxRQUFRLENBQUNNLElBQXhELEVBQThELE9BQU8sRUFBUDtBQUU5RCxRQUFNQyxNQUFNLEdBQUcsMkJBQWNSLE9BQWQsQ0FBZjtBQUNBUSxFQUFBQSxNQUFNLENBQUNDLEtBQVAsQ0FBYUMsT0FBYixHQUF1QixLQUF2QjtBQUVBLFFBQU1DLEdBQUcsR0FBRyxzQkFBY1YsUUFBZCxFQUF3QkgsUUFBeEIsRUFBa0NDLFFBQWxDLEVBQTRDUyxNQUE1QyxDQUFaO0FBRUFHLEVBQUFBLEdBQUcsQ0FBQ0MsT0FBSixHQUFjRCxHQUFHLENBQUNDLE9BQUosQ0FBWUMsSUFBWixDQUFpQixJQUFqQixFQUF1QkYsR0FBdkIsQ0FBZDtBQUVBLFFBQU1HLFFBQVEsR0FBR0gsR0FBRyxDQUFDSSxjQUFKLEtBQXVCLENBQXZCLEdBQTJCQyxnQkFBM0IsR0FBeUNDLGNBQTFEO0FBQ0EsUUFBTSx1QkFBYWhCLFFBQWIsRUFBdUJhLFFBQXZCLEVBQWlDSCxHQUFqQyxDQUFOO0FBRUEsUUFBTU8sUUFBUSxHQUFHUCxHQUFHLENBQUNRLE1BQUosQ0FBV0MsTUFBWCxDQUFtQkMsR0FBRCxJQUFTO0FBQzFDLFNBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1gsR0FBRyxDQUFDWSxXQUFKLENBQWdCQyxNQUFwQyxFQUE0Q0YsQ0FBQyxFQUE3QyxFQUFpRDtBQUMvQyxVQUFJRCxHQUFHLENBQUNJLFFBQUosS0FBaUJkLEdBQUcsQ0FBQ1ksV0FBSixDQUFnQkQsQ0FBaEIsQ0FBckIsRUFBeUM7QUFDdkMsWUFBSVgsR0FBRyxDQUFDWSxXQUFKLENBQWdCRCxDQUFoQixFQUFtQmQsTUFBbkIsQ0FBMEJrQixZQUE5QixFQUE0QztBQUMxQyxnQkFBTUMsUUFBUSxHQUFJLEdBQUVOLEdBQUcsQ0FBQ08sSUFBSyxLQUFJUCxHQUFHLENBQUNRLElBQUosQ0FBU0MsSUFBVCxDQUFjLEdBQWQsQ0FBbUIsRUFBcEQ7QUFDQSxpQkFBT25CLEdBQUcsQ0FBQ1ksV0FBSixDQUFnQkQsQ0FBaEIsRUFBbUJkLE1BQW5CLENBQTBCa0IsWUFBMUIsQ0FBdUNLLE9BQXZDLENBQStDSixRQUEvQyxNQUE2RCxDQUFDLENBQXJFO0FBQ0Q7O0FBQ0QsZUFBTyxJQUFQO0FBQ0Q7QUFDRjs7QUFDRCxXQUFPLElBQVA7QUFDRCxHQVhnQixDQUFqQjtBQWFBLFNBQU9ULFFBQVA7QUFDRCxDQWpDTTs7OztBQW1DQSxNQUFNYyxlQUFlLEdBQUcsT0FBT0MsSUFBUCxFQUFhakMsT0FBYixLQUF5QjtBQUN0RCxRQUFNa0MsR0FBRyxHQUFHLE1BQU0sb0JBQVFELElBQVIsQ0FBbEI7QUFDQSxRQUFNRSxnQkFBZ0IsR0FBRyxNQUFNdEMsUUFBUSxDQUFDcUMsR0FBRCxFQUFNRCxJQUFOLEVBQVlqQyxPQUFaLENBQXZDO0FBQ0EsU0FBT21DLGdCQUFQO0FBQ0QsQ0FKTTs7OztBQU1BLE1BQU1DLGdCQUFnQixHQUFHLE9BQU9DLEtBQVAsRUFBY3JDLE9BQWQsS0FBMEI7QUFDeEQsUUFBTXNDLGdCQUFnQixHQUFHRCxLQUF6QixDQUR3RCxDQUN4Qjs7QUFDaEMsUUFBTUgsR0FBRyxHQUFHSyxZQUFHQyxZQUFILENBQWdCRixnQkFBaEIsRUFBa0MsT0FBbEMsQ0FBWjs7QUFDQSxRQUFNSCxnQkFBZ0IsR0FBRyxNQUFNdEMsUUFBUSxDQUFDcUMsR0FBRCxFQUFNSSxnQkFBTixFQUF3QnRDLE9BQXhCLENBQXZDO0FBQ0EsU0FBT21DLGdCQUFQO0FBQ0QsQ0FMTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHlhbWwgZnJvbSAnanMteWFtbCc7XG5cbmltcG9ydCB7IE9wZW5BUElSb290IH0gZnJvbSAnLi90eXBlcy9PQVMzJztcbmltcG9ydCB7IE9BUzJSb290IH0gZnJvbSAnLi90eXBlcy9PQVMyJztcblxuaW1wb3J0IHsgY3JlYXRlWUFNTFBhcnNlRXJyb3IgfSBmcm9tICcuL2Vycm9yJztcblxuaW1wb3J0IHsgZ2V0RmlsZSB9IGZyb20gJy4vdXRpbHMnO1xuXG5pbXBvcnQgeyBnZXRMaW50Q29uZmlnIH0gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHRyYXZlcnNlTm9kZSBmcm9tICcuL3RyYXZlcnNlJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJy4vY29udGV4dCc7XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZSA9IGFzeW5jICh5YW1sRGF0YSwgZmlsZVBhdGgsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICBsZXQgZG9jdW1lbnQ7XG4gIHRyeSB7XG4gICAgZG9jdW1lbnQgPSB5YW1sLnNhZmVMb2FkKHlhbWxEYXRhKTtcbiAgfSBjYXRjaCAoZXgpIHtcbiAgICByZXR1cm4gW2NyZWF0ZVlBTUxQYXJzZUVycm9yKGV4LCB7fSwgZmlsZVBhdGgsIHlhbWxEYXRhLCB0cnVlKV07XG4gIH1cbiAgaWYgKCFkb2N1bWVudC5vcGVuYXBpICYmICFkb2N1bWVudC5zd2FnZ2VyICYmICFkb2N1bWVudC4kcmVmKSByZXR1cm4gW107XG5cbiAgY29uc3QgY29uZmlnID0gZ2V0TGludENvbmZpZyhvcHRpb25zKTtcbiAgY29uZmlnLnJ1bGVzLmJ1bmRsZXIgPSAnb2ZmJztcblxuICBjb25zdCBjdHggPSBjcmVhdGVDb250ZXh0KGRvY3VtZW50LCB5YW1sRGF0YSwgZmlsZVBhdGgsIGNvbmZpZyk7XG5cbiAgY3R4LmdldFJ1bGUgPSBjdHguZ2V0UnVsZS5iaW5kKG51bGwsIGN0eCk7XG5cbiAgY29uc3Qgcm9vdE5vZGUgPSBjdHgub3BlbmFwaVZlcnNpb24gPT09IDMgPyBPcGVuQVBJUm9vdCA6IE9BUzJSb290O1xuICBhd2FpdCB0cmF2ZXJzZU5vZGUoZG9jdW1lbnQsIHJvb3ROb2RlLCBjdHgpO1xuXG4gIGNvbnN0IGZpbHRlcmVkID0gY3R4LnJlc3VsdC5maWx0ZXIoKG1zZykgPT4ge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgY3R4LmN1c3RvbVJ1bGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAobXNnLmZyb21SdWxlID09PSBjdHguY3VzdG9tUnVsZXNbal0pIHtcbiAgICAgICAgaWYgKGN0eC5jdXN0b21SdWxlc1tqXS5jb25maWcuZXhjbHVkZVBhdGhzKSB7XG4gICAgICAgICAgY29uc3QgZnVsbFBhdGggPSBgJHttc2cuZmlsZX0jLyR7bXNnLnBhdGguam9pbignLycpfWA7XG4gICAgICAgICAgcmV0dXJuIGN0eC5jdXN0b21SdWxlc1tqXS5jb25maWcuZXhjbHVkZVBhdGhzLmluZGV4T2YoZnVsbFBhdGgpID09PSAtMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0pO1xuXG4gIHJldHVybiBmaWx0ZXJlZDtcbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUZyb21VcmwgPSBhc3luYyAobGluaywgb3B0aW9ucykgPT4ge1xuICBjb25zdCBkb2MgPSBhd2FpdCBnZXRGaWxlKGxpbmspO1xuICBjb25zdCB2YWxpZGF0aW9uUmVzdWx0ID0gYXdhaXQgdmFsaWRhdGUoZG9jLCBsaW5rLCBvcHRpb25zKTtcbiAgcmV0dXJuIHZhbGlkYXRpb25SZXN1bHQ7XG59O1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGVGcm9tRmlsZSA9IGFzeW5jIChmTmFtZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCByZXNvbHZlZEZpbGVOYW1lID0gZk5hbWU7IC8vIHBhdGgucmVzb2x2ZShmTmFtZSk7XG4gIGNvbnN0IGRvYyA9IGZzLnJlYWRGaWxlU3luYyhyZXNvbHZlZEZpbGVOYW1lLCAndXRmLTgnKTtcbiAgY29uc3QgdmFsaWRhdGlvblJlc3VsdCA9IGF3YWl0IHZhbGlkYXRlKGRvYywgcmVzb2x2ZWRGaWxlTmFtZSwgb3B0aW9ucyk7XG4gIHJldHVybiB2YWxpZGF0aW9uUmVzdWx0O1xufTtcbiJdfQ==